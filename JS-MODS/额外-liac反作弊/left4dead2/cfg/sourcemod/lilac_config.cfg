// This file was auto-generated by KiD's Convar Class. Only plugin convars are allowed.
// ConVars for plugin "lilac.smx"


// Enable Little Anti-Cheat.
// 启用 Little Anti-Cheat.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_enable "1"

// Welcome connecting players saying that the server is protected.
// 给进服玩家提示服务器受反作弊保护.(建议关闭，一些开挂的可能看到这个消息就不开了，关掉可以让他们放低防备).
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_welcome "1"

// Ban players via sourcebans++ (If it isn't installed, it will default to basebans).
// 通过sourcebans++封禁玩家 (如果没安装, 默认为baseban).
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_sourcebans "0"

// Ban players via Material-Admin (Fork of Sourcebans++. If it isn't installed, will default to sourcebans++ or basebans).
// 通过Material-Admin封禁玩家 (Sourcebans++的分支. 如果未安装, 将会默认为sourcebans++ 或者 basebans).
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_materialadmin "0"

// Enable reflecting log messages to SourceIRC channels flagged with 'lilac', if SourceIRC is available.
// 如果SourceIRC可用，则将日志消息记录到“lilac”的SourceIRC频道.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_sourceirc "1"

// Enable cheat logging.
// 启用开挂记录.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_log "1"

// 0 = Disabled.
// 1 = Log extra information on player banned.
// 2 = Log extra information on everything.
// 0 = 关闭.
// 1 = 记录被封禁的玩家的额外信息.
// 2 = 记录所有内容的额外信息.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "2.000000"
lilac_log_extra "1"

// Log when players are kicked for misc features, like interp exploits, too high ping and on convar response failure.
// 记录日志:当玩家因其他方式被踢时，如interp漏洞、ping过高和convar响应失败。
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_log_misc "1"

// Which date & time format to use when logging. Type: "lilac_date_list" for more info.
// 日志记录时使用的日期和时间格式。控制台输入：“lilac_date_list”了解更多信息
// -
// Default: "{year}/{month}/{day} {hour}:{minute}:{second}"
lilac_log_date "{year}/{month}/{day} {hour}:{minute}:{second}"

// Enable banning of cheaters, set to 0 if you want to test Lilac before fully trusting it with bans.
// 启用封禁开挂的人，如果你只想测试插件效果，将其设置为0不封禁.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_ban "1"

// How long bans should last in minutes (0 = forever).
// 封禁持续多久 (0 = 永久，1= 1分钟 以此类推).
// -
// Default: "0"
// Minimum: "0.000000"
lilac_ban_length "0"

// Ban reason language.
// 0 = Use server's language.
// 1 = Use the language of the cheater.
// 封禁原因的语言提示.
// 0 = 使用服务器语言.
// 1 = 使用开挂者的客户端语言.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_ban_language "1"

// Alert admins in chat about potential cheaters.
// 在聊天框中提醒管理员有开挂嫌疑的人.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_cheat_warning "1"

// Detect Angle-Cheats (Basic Anti-Aim, Legit Anti-Backstab and Duckspeed).
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// 检测角度作弊 Angel-cheat(包含反自瞄，回溯和鸭子跳). 已修复误封问题，可启用.
// 1 = 仅记录日志.
// 0 = 关闭.
// 1 = 启用.
// -
// Default: "1"
// Minimum: "-1.000000"
// Maximum: "1.000000"
lilac_angles "1"

// Patch Angle-Cheats (Basic Anti-Aim, Legit Anti-Backstab and Duckspeed).
// 角度作弊补丁修复 Angel-cheat patch(包含反自瞄，回溯和鸭子跳).已修复误封问题，可启用.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_angles_patch "1"

// Detect Chat-Clear.
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// 检测清屏作弊-chat clear.（指有人无限在聊天框发送长屏的文字，导致服务器卡顿）建议启用.
// 1 = 仅记录.
// 0 = 关闭.
// 1 = 启用.
// -
// Default: "1"
// Minimum: "-1.000000"
// Maximum: "1.000000"
lilac_chatclear "1"

// Detect basic invalid ConVars.
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// 检测基本无效的ConVar.（开着就好不用管）
// 1 = 仅记录.
// 0 = 关闭.
// 1 = 启用.
// -
// Default: "1"
// Minimum: "-1.000000"
// Maximum: "1.000000"
lilac_convar "1"

// Detect NoLerp.
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// 检测 NoLerp. （建议关闭，0lerp的人加入服务器会被封，作者的意思的开挂者在0lerp的情况下自瞄外挂的准确度会提高）
// 1 = 仅记录.
// 0 = 关闭.
// 1 = 启用.
// -
// Default: "0"
// Minimum: "-1.000000"
// Maximum: "1.000000"
lilac_nolerp "0"

// Bhop detection mode (Negative values = log-only).
// 0 = Disabled.
// 1&2 = Reserved (Invalid).
// 3 = Custom (unlocks lilac_bhop_set command).
// 4 = Low.
// 5 = Medium.
// 6 = High.
// 连跳脚本/辅助检测 (-1 = 仅记录日志).如果服务器装有自动连跳的插件关闭检测。如果没有，可以把数值设为5.
// 0 = 关闭.
// 1&2 = 保留（无效）.
// 3 = 自定义 (解锁 lilac_bhop_set 指令，具体在相关源码查看).
// 4 = 低检测.
// 5 = 中等检测.
// 6 = 高检测.
// -
// Default: "0"
// Minimum: "-6.000000"
// Maximum: "6.000000"
lilac_bhop "0"

// Detect basic Aimbots.
// 0 = Disabled.
// 1 = Log only.
// 5 or more = ban on n'th detection (Minimum possible is 5)
// 检测自瞄外挂.
// 0 = 关闭.
// 1 = 仅记录日志.
// 5或更高 = 检测到使用自瞄次数超过设定后将会封禁 (最低为 5次检测)
// -
// Default: "5"
// Minimum: "0.000000"
lilac_aimbot "3"

// Detect Autoshoot.
// 检测自动扳机/自动开枪。 （使用鼠标连点器会被检测到，可以关闭。）
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_aimbot_autoshoot "1"

// Detect Aimlock.
// 0 = Disabled.
// 1 = Log only.
// 5 or more = ban on n'th detection (Minimum possible is 5).
// 检测自动锁头.
// 0 = 关闭.
// 1 = 仅记录日志.
// 5或更高 = 检测到使用锁头次数超过设定后将会封禁 (最低为 5次检测). 推荐为10，因为有时候神经枪会导致被检测而记录。
// -
// Default: "30"
// Minimum: "0.000000"
lilac_aimlock "30"

// Only process at most 5 suspicious players for aimlock.
// DO NOT DISABLE THIS UNLESS YOUR SERVER CAN HANDLE IT!
// 最多只能处理5名锁头玩家.
// 不要关闭这个功能,除非你服务器能hold的住!
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_aimlock_light "1"

// CS:GO Only, detect Anti-Duck-Delay/FastDuck.
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// （CSGO用的，不管，关闭就好）.
// -
// Default: "0"
// Minimum: "-1.000000"
// Maximum: "1.000000"
lilac_anti_duck_delay "0"

// TF2 Only, detect infinite noisemaker spam. STILL IN BETA, DOES NOT BAN, ONLY LOGS! MAY HAVE SOME ISSUES!
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// 军团要塞2用的，关闭就行
// -
// Default: "0"
// Minimum: "-1.000000"
// Maximum: "1.000000"
lilac_noisemaker "0"

// Patch Backtrack.
// 0 = Disabled (Recommended setting for SMAC compatibility).
// 1 = Enabled.
// 回溯外挂补丁.（开着就好）.
// 0 = 关闭.
// 1 = 启用.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_backtrack_patch "0"

// How tolerant the backtrack patch will be of tickcount changes.
// 0 = No tolerance (recommended).
// 1+ = n ticks tolerant.
// 不用管,关闭就行.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "3.000000"
lilac_backtrack_tolerance "0"

// Ban players with too high of a ping for 3 minutes.
// This is meant to deal with fakelatency, the ban length is just to prevent instant reconnects.
// 0 = no ping limit, minimum possible is 100.
// 封禁高延迟玩家3分钟.
// 此功能为了解决使用fake latency(假延迟)的外挂功能，封禁三分钟为了防止快速重新连接.
// 0 = 没有关闭延迟检测，最低设定为100延迟，最高为1000.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1000.000000"
lilac_max_ping "0"

// Move players with a high ping to spectator and warn them after this many seconds (Minimum possible is 30).
// 将高ping玩家移到旁观者。0为关闭，建议不用开启.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "90.000000"
lilac_max_ping_spec "0"

// Kicks players attempting to exploit interpolation, any interp higher than this value = kick.
// Minimum value possible = 105 (Default interp in games = 100).
// 0 or less than 105 = Disabled.
// 踢出高lerp的玩家。（关闭就行）.
// 最小值 = 105 (游戏默认lerp值 = 100).
// 0或低于105 = 关闭.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "510.000000"
lilac_max_lerp "0"

// Detect macros.
// -1 = Log only.
// 0 = Disabled.
// 1 = Enabled.
// 2 = Enabled, but no logging.
// 检测鼠标/键盘宏。(可开可关，建议关闭).
// 1 = 仅记录日志.
// 0 = 关闭.
// 1 = 启用.
// 2 = 启用，但不记录日志.
// -
// Default: "0"
// Minimum: "-1.000000"
// Maximum: "2.000000"
lilac_macro "0"

// Warning mode for Macro detection:
// 0 = No warning.
// 1 = Warn player using macro.
// 2 = Warn admins on server.
// 3 = Warn everyone.
// 检测到鼠标/键盘宏的警告方式:
// 0 = 不警告.
// 1 = 警告此玩家正在使用鼠标/键盘宏.
// 2 = 警告在服务器的管理员.
// 3 = 警告给每一个人.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "3.000000"
lilac_macro_warning "3"

// What to do with players detected of using macros:
// 0 = Kick.
// 1 = Ban.
// 检测到鼠标/键盘宏的处理方式:
// 0 = 踢出服务器.
// 1 = 封禁.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_macro_method "0"

// What types of macros to detect:
// 0 = All.
// 1 = Auto-Jump.
// 2 = Auto-Shoot.
// 检测鼠标/键盘宏的功能:
// 0 = 检测全部功能.
// 1 = 自动跳（例如按住空格就一直跳的那种）.
// 2 = 鼠标连发（例如猎枪或军狙按稳了连发，默认是按一次鼠标开一枪）.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "3.000000"
lilac_macro_mode "0"

// Filter invalid names (kicks players with invalid names).
// -1 = Log-Only.
// 0 = Disabled.
// 1 = Enabled, kick only.
// 2 = Ban cheaters with newlines in names.
// 过滤无效名称 (例如乱码的ID：龏蓍麑颰鲅  这种).
// 1 = 仅记录日志.
// 0 = 关闭.
// 1 = 启用，但只踢出.
// 2 = 启用且封禁.
// -
// Default: "2"
// Minimum: "-1.000000"
// Maximum: "2.000000"
lilac_filter_name "0"

// Filter invalid characters in chat (block chat messages).
// 过滤聊天中的无效字符（阻止聊天消息）.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_filter_chat "0"

// Ignore some cheat detections for players who have too much packet loss (bad connection to the server).
// 忽略一些丢包玩家的检测，开着就好.
// -
// Default: "1"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_loss_fix "1"

// Automatically update Little Anti-Cheat.
// 自动更新反作弊插件.
// -
// Default: "0"
// Minimum: "0.000000"
// Maximum: "1.000000"
lilac_auto_update "0"

// Database to log detections to.
// empty = don't log to database
// database name = log to this database (MySQL & SQLite supported)
// -
// Default: ""
lilac_database ""


